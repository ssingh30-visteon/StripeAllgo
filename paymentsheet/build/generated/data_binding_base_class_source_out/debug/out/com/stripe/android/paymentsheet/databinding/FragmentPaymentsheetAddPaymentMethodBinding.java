// Generated by view binder compiler. Do not edit!
package com.stripe.android.paymentsheet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.stripe.android.paymentsheet.R;
import com.stripe.android.paymentsheet.ui.GooglePayButton;
import com.stripe.android.paymentsheet.ui.GooglePayDivider;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPaymentsheetAddPaymentMethodBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView addPaymentMethodHeader;

  @NonNull
  public final GooglePayButton googlePayButton;

  @NonNull
  public final GooglePayDivider googlePayDivider;

  @NonNull
  public final TextView message;

  @NonNull
  public final FragmentContainerView paymentMethodFragmentContainer;

  @NonNull
  public final RecyclerView paymentMethodsRecycler;

  @NonNull
  public final LinearLayout topContainer;

  private FragmentPaymentsheetAddPaymentMethodBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView addPaymentMethodHeader, @NonNull GooglePayButton googlePayButton,
      @NonNull GooglePayDivider googlePayDivider, @NonNull TextView message,
      @NonNull FragmentContainerView paymentMethodFragmentContainer,
      @NonNull RecyclerView paymentMethodsRecycler, @NonNull LinearLayout topContainer) {
    this.rootView = rootView;
    this.addPaymentMethodHeader = addPaymentMethodHeader;
    this.googlePayButton = googlePayButton;
    this.googlePayDivider = googlePayDivider;
    this.message = message;
    this.paymentMethodFragmentContainer = paymentMethodFragmentContainer;
    this.paymentMethodsRecycler = paymentMethodsRecycler;
    this.topContainer = topContainer;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPaymentsheetAddPaymentMethodBinding inflate(
      @NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPaymentsheetAddPaymentMethodBinding inflate(
      @NonNull LayoutInflater inflater, @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_paymentsheet_add_payment_method, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPaymentsheetAddPaymentMethodBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_payment_method_header;
      TextView addPaymentMethodHeader = ViewBindings.findChildViewById(rootView, id);
      if (addPaymentMethodHeader == null) {
        break missingId;
      }

      id = R.id.google_pay_button;
      GooglePayButton googlePayButton = ViewBindings.findChildViewById(rootView, id);
      if (googlePayButton == null) {
        break missingId;
      }

      id = R.id.google_pay_divider;
      GooglePayDivider googlePayDivider = ViewBindings.findChildViewById(rootView, id);
      if (googlePayDivider == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.payment_method_fragment_container;
      FragmentContainerView paymentMethodFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethodFragmentContainer == null) {
        break missingId;
      }

      id = R.id.payment_methods_recycler;
      RecyclerView paymentMethodsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (paymentMethodsRecycler == null) {
        break missingId;
      }

      id = R.id.top_container;
      LinearLayout topContainer = ViewBindings.findChildViewById(rootView, id);
      if (topContainer == null) {
        break missingId;
      }

      return new FragmentPaymentsheetAddPaymentMethodBinding((ConstraintLayout) rootView,
          addPaymentMethodHeader, googlePayButton, googlePayDivider, message,
          paymentMethodFragmentContainer, paymentMethodsRecycler, topContainer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
