// Generated by view binder compiler. Do not edit!
package com.stripe.android.paymentsheet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.stripe.android.paymentsheet.R;
import com.stripe.android.view.CountryTextInputLayout;
import com.stripe.android.view.StripeEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class StripeBillingAddressLayoutBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final TextInputEditText address1;

  @NonNull
  public final View address1Divider;

  @NonNull
  public final TextInputLayout address1Layout;

  @NonNull
  public final TextInputEditText address2;

  @NonNull
  public final View address2Divider;

  @NonNull
  public final TextInputLayout address2Layout;

  @NonNull
  public final TextInputEditText city;

  @NonNull
  public final TextInputLayout cityLayout;

  @NonNull
  public final LinearLayout cityPostalContainer;

  @NonNull
  public final View cityPostalDivider;

  @NonNull
  public final CountryTextInputLayout countryLayout;

  @NonNull
  public final StripeEditText postalCode;

  @NonNull
  public final TextInputLayout postalCodeLayout;

  @NonNull
  public final TextInputEditText state;

  @NonNull
  public final View stateDivider;

  @NonNull
  public final TextInputLayout stateLayout;

  private StripeBillingAddressLayoutBinding(@NonNull View rootView,
      @NonNull TextInputEditText address1, @NonNull View address1Divider,
      @NonNull TextInputLayout address1Layout, @NonNull TextInputEditText address2,
      @NonNull View address2Divider, @NonNull TextInputLayout address2Layout,
      @NonNull TextInputEditText city, @NonNull TextInputLayout cityLayout,
      @NonNull LinearLayout cityPostalContainer, @NonNull View cityPostalDivider,
      @NonNull CountryTextInputLayout countryLayout, @NonNull StripeEditText postalCode,
      @NonNull TextInputLayout postalCodeLayout, @NonNull TextInputEditText state,
      @NonNull View stateDivider, @NonNull TextInputLayout stateLayout) {
    this.rootView = rootView;
    this.address1 = address1;
    this.address1Divider = address1Divider;
    this.address1Layout = address1Layout;
    this.address2 = address2;
    this.address2Divider = address2Divider;
    this.address2Layout = address2Layout;
    this.city = city;
    this.cityLayout = cityLayout;
    this.cityPostalContainer = cityPostalContainer;
    this.cityPostalDivider = cityPostalDivider;
    this.countryLayout = countryLayout;
    this.postalCode = postalCode;
    this.postalCodeLayout = postalCodeLayout;
    this.state = state;
    this.stateDivider = stateDivider;
    this.stateLayout = stateLayout;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static StripeBillingAddressLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.stripe_billing_address_layout, parent);
    return bind(parent);
  }

  @NonNull
  public static StripeBillingAddressLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address1;
      TextInputEditText address1 = ViewBindings.findChildViewById(rootView, id);
      if (address1 == null) {
        break missingId;
      }

      id = R.id.address1_divider;
      View address1Divider = ViewBindings.findChildViewById(rootView, id);
      if (address1Divider == null) {
        break missingId;
      }

      id = R.id.address1_layout;
      TextInputLayout address1Layout = ViewBindings.findChildViewById(rootView, id);
      if (address1Layout == null) {
        break missingId;
      }

      id = R.id.address2;
      TextInputEditText address2 = ViewBindings.findChildViewById(rootView, id);
      if (address2 == null) {
        break missingId;
      }

      id = R.id.address2_divider;
      View address2Divider = ViewBindings.findChildViewById(rootView, id);
      if (address2Divider == null) {
        break missingId;
      }

      id = R.id.address2_layout;
      TextInputLayout address2Layout = ViewBindings.findChildViewById(rootView, id);
      if (address2Layout == null) {
        break missingId;
      }

      id = R.id.city;
      TextInputEditText city = ViewBindings.findChildViewById(rootView, id);
      if (city == null) {
        break missingId;
      }

      id = R.id.city_layout;
      TextInputLayout cityLayout = ViewBindings.findChildViewById(rootView, id);
      if (cityLayout == null) {
        break missingId;
      }

      id = R.id.city_postal_container;
      LinearLayout cityPostalContainer = ViewBindings.findChildViewById(rootView, id);
      if (cityPostalContainer == null) {
        break missingId;
      }

      id = R.id.city_postal_divider;
      View cityPostalDivider = ViewBindings.findChildViewById(rootView, id);
      if (cityPostalDivider == null) {
        break missingId;
      }

      id = R.id.country_layout;
      CountryTextInputLayout countryLayout = ViewBindings.findChildViewById(rootView, id);
      if (countryLayout == null) {
        break missingId;
      }

      id = R.id.postal_code;
      StripeEditText postalCode = ViewBindings.findChildViewById(rootView, id);
      if (postalCode == null) {
        break missingId;
      }

      id = R.id.postal_code_layout;
      TextInputLayout postalCodeLayout = ViewBindings.findChildViewById(rootView, id);
      if (postalCodeLayout == null) {
        break missingId;
      }

      id = R.id.state;
      TextInputEditText state = ViewBindings.findChildViewById(rootView, id);
      if (state == null) {
        break missingId;
      }

      id = R.id.state_divider;
      View stateDivider = ViewBindings.findChildViewById(rootView, id);
      if (stateDivider == null) {
        break missingId;
      }

      id = R.id.state_layout;
      TextInputLayout stateLayout = ViewBindings.findChildViewById(rootView, id);
      if (stateLayout == null) {
        break missingId;
      }

      return new StripeBillingAddressLayoutBinding(rootView, address1, address1Divider,
          address1Layout, address2, address2Divider, address2Layout, city, cityLayout,
          cityPostalContainer, cityPostalDivider, countryLayout, postalCode, postalCodeLayout,
          state, stateDivider, stateLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
