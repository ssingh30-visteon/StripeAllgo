// Generated by view binder compiler. Do not edit!
package com.stripe.example.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.stripe.example.R;
import com.stripe.example.activity.GooglePayButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GooglePayActivityPlaygroundBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout coordinator;

  @NonNull
  public final RadioGroup googlePayBilling;

  @NonNull
  public final RadioButton googlePayBillingFull;

  @NonNull
  public final RadioButton googlePayBillingMin;

  @NonNull
  public final RadioGroup googlePayBillingRequired;

  @NonNull
  public final RadioButton googlePayBillingRequiredFalse;

  @NonNull
  public final RadioButton googlePayBillingRequiredTrue;

  @NonNull
  public final GooglePayButton googlePayButton;

  @NonNull
  public final RadioGroup googlePayEnvironment;

  @NonNull
  public final RadioButton googlePayEnvironmentProduction;

  @NonNull
  public final RadioButton googlePayEnvironmentTest;

  @NonNull
  public final RadioGroup googlePayExistingPm;

  @NonNull
  public final RadioButton googlePayExistingPmFalse;

  @NonNull
  public final RadioButton googlePayExistingPmTrue;

  @NonNull
  public final EditText googlePayMerchantCountryCode;

  @NonNull
  public final EditText googlePayMerchantName;

  @NonNull
  public final RadioGroup googlePayPhoneRequired;

  @NonNull
  public final RadioButton googlePayPhoneRequiredFalse;

  @NonNull
  public final RadioButton googlePayPhoneRequiredTrue;

  @NonNull
  public final TextView googlePayResult;

  @NonNull
  public final LinearProgressIndicator progressBar;

  private GooglePayActivityPlaygroundBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout coordinator, @NonNull RadioGroup googlePayBilling,
      @NonNull RadioButton googlePayBillingFull, @NonNull RadioButton googlePayBillingMin,
      @NonNull RadioGroup googlePayBillingRequired,
      @NonNull RadioButton googlePayBillingRequiredFalse,
      @NonNull RadioButton googlePayBillingRequiredTrue, @NonNull GooglePayButton googlePayButton,
      @NonNull RadioGroup googlePayEnvironment, @NonNull RadioButton googlePayEnvironmentProduction,
      @NonNull RadioButton googlePayEnvironmentTest, @NonNull RadioGroup googlePayExistingPm,
      @NonNull RadioButton googlePayExistingPmFalse, @NonNull RadioButton googlePayExistingPmTrue,
      @NonNull EditText googlePayMerchantCountryCode, @NonNull EditText googlePayMerchantName,
      @NonNull RadioGroup googlePayPhoneRequired, @NonNull RadioButton googlePayPhoneRequiredFalse,
      @NonNull RadioButton googlePayPhoneRequiredTrue, @NonNull TextView googlePayResult,
      @NonNull LinearProgressIndicator progressBar) {
    this.rootView = rootView;
    this.coordinator = coordinator;
    this.googlePayBilling = googlePayBilling;
    this.googlePayBillingFull = googlePayBillingFull;
    this.googlePayBillingMin = googlePayBillingMin;
    this.googlePayBillingRequired = googlePayBillingRequired;
    this.googlePayBillingRequiredFalse = googlePayBillingRequiredFalse;
    this.googlePayBillingRequiredTrue = googlePayBillingRequiredTrue;
    this.googlePayButton = googlePayButton;
    this.googlePayEnvironment = googlePayEnvironment;
    this.googlePayEnvironmentProduction = googlePayEnvironmentProduction;
    this.googlePayEnvironmentTest = googlePayEnvironmentTest;
    this.googlePayExistingPm = googlePayExistingPm;
    this.googlePayExistingPmFalse = googlePayExistingPmFalse;
    this.googlePayExistingPmTrue = googlePayExistingPmTrue;
    this.googlePayMerchantCountryCode = googlePayMerchantCountryCode;
    this.googlePayMerchantName = googlePayMerchantName;
    this.googlePayPhoneRequired = googlePayPhoneRequired;
    this.googlePayPhoneRequiredFalse = googlePayPhoneRequiredFalse;
    this.googlePayPhoneRequiredTrue = googlePayPhoneRequiredTrue;
    this.googlePayResult = googlePayResult;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static GooglePayActivityPlaygroundBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GooglePayActivityPlaygroundBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.google_pay_activity_playground, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GooglePayActivityPlaygroundBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout coordinator = (CoordinatorLayout) rootView;

      id = R.id.google_pay_billing;
      RadioGroup googlePayBilling = ViewBindings.findChildViewById(rootView, id);
      if (googlePayBilling == null) {
        break missingId;
      }

      id = R.id.google_pay_billing_full;
      RadioButton googlePayBillingFull = ViewBindings.findChildViewById(rootView, id);
      if (googlePayBillingFull == null) {
        break missingId;
      }

      id = R.id.google_pay_billing_min;
      RadioButton googlePayBillingMin = ViewBindings.findChildViewById(rootView, id);
      if (googlePayBillingMin == null) {
        break missingId;
      }

      id = R.id.google_pay_billing_required;
      RadioGroup googlePayBillingRequired = ViewBindings.findChildViewById(rootView, id);
      if (googlePayBillingRequired == null) {
        break missingId;
      }

      id = R.id.google_pay_billing_required_false;
      RadioButton googlePayBillingRequiredFalse = ViewBindings.findChildViewById(rootView, id);
      if (googlePayBillingRequiredFalse == null) {
        break missingId;
      }

      id = R.id.google_pay_billing_required_true;
      RadioButton googlePayBillingRequiredTrue = ViewBindings.findChildViewById(rootView, id);
      if (googlePayBillingRequiredTrue == null) {
        break missingId;
      }

      id = R.id.google_pay_button;
      GooglePayButton googlePayButton = ViewBindings.findChildViewById(rootView, id);
      if (googlePayButton == null) {
        break missingId;
      }

      id = R.id.google_pay_environment;
      RadioGroup googlePayEnvironment = ViewBindings.findChildViewById(rootView, id);
      if (googlePayEnvironment == null) {
        break missingId;
      }

      id = R.id.google_pay_environment_production;
      RadioButton googlePayEnvironmentProduction = ViewBindings.findChildViewById(rootView, id);
      if (googlePayEnvironmentProduction == null) {
        break missingId;
      }

      id = R.id.google_pay_environment_test;
      RadioButton googlePayEnvironmentTest = ViewBindings.findChildViewById(rootView, id);
      if (googlePayEnvironmentTest == null) {
        break missingId;
      }

      id = R.id.google_pay_existing_pm;
      RadioGroup googlePayExistingPm = ViewBindings.findChildViewById(rootView, id);
      if (googlePayExistingPm == null) {
        break missingId;
      }

      id = R.id.google_pay_existing_pm_false;
      RadioButton googlePayExistingPmFalse = ViewBindings.findChildViewById(rootView, id);
      if (googlePayExistingPmFalse == null) {
        break missingId;
      }

      id = R.id.google_pay_existing_pm_true;
      RadioButton googlePayExistingPmTrue = ViewBindings.findChildViewById(rootView, id);
      if (googlePayExistingPmTrue == null) {
        break missingId;
      }

      id = R.id.google_pay_merchant_country_code;
      EditText googlePayMerchantCountryCode = ViewBindings.findChildViewById(rootView, id);
      if (googlePayMerchantCountryCode == null) {
        break missingId;
      }

      id = R.id.google_pay_merchant_name;
      EditText googlePayMerchantName = ViewBindings.findChildViewById(rootView, id);
      if (googlePayMerchantName == null) {
        break missingId;
      }

      id = R.id.google_pay_phone_required;
      RadioGroup googlePayPhoneRequired = ViewBindings.findChildViewById(rootView, id);
      if (googlePayPhoneRequired == null) {
        break missingId;
      }

      id = R.id.google_pay_phone_required_false;
      RadioButton googlePayPhoneRequiredFalse = ViewBindings.findChildViewById(rootView, id);
      if (googlePayPhoneRequiredFalse == null) {
        break missingId;
      }

      id = R.id.google_pay_phone_required_true;
      RadioButton googlePayPhoneRequiredTrue = ViewBindings.findChildViewById(rootView, id);
      if (googlePayPhoneRequiredTrue == null) {
        break missingId;
      }

      id = R.id.google_pay_result;
      TextView googlePayResult = ViewBindings.findChildViewById(rootView, id);
      if (googlePayResult == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      LinearProgressIndicator progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new GooglePayActivityPlaygroundBinding((CoordinatorLayout) rootView, coordinator,
          googlePayBilling, googlePayBillingFull, googlePayBillingMin, googlePayBillingRequired,
          googlePayBillingRequiredFalse, googlePayBillingRequiredTrue, googlePayButton,
          googlePayEnvironment, googlePayEnvironmentProduction, googlePayEnvironmentTest,
          googlePayExistingPm, googlePayExistingPmFalse, googlePayExistingPmTrue,
          googlePayMerchantCountryCode, googlePayMerchantName, googlePayPhoneRequired,
          googlePayPhoneRequiredFalse, googlePayPhoneRequiredTrue, googlePayResult, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
