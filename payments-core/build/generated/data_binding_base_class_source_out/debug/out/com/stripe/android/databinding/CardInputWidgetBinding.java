// Generated by view binder compiler. Do not edit!
package com.stripe.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.stripe.android.R;
import com.stripe.android.view.CardBrandView;
import com.stripe.android.view.CardNumberEditText;
import com.stripe.android.view.CvcEditText;
import com.stripe.android.view.ExpiryDateEditText;
import com.stripe.android.view.PostalCodeEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardInputWidgetBinding implements ViewBinding {
  @NonNull
  private final View rootView;

  @NonNull
  public final CardBrandView cardBrandView;

  @NonNull
  public final CardNumberEditText cardNumberEditText;

  @NonNull
  public final TextInputLayout cardNumberTextInputLayout;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final CvcEditText cvcEditText;

  @NonNull
  public final TextInputLayout cvcTextInputLayout;

  @NonNull
  public final ExpiryDateEditText expiryDateEditText;

  @NonNull
  public final TextInputLayout expiryDateTextInputLayout;

  @NonNull
  public final PostalCodeEditText postalCodeEditText;

  @NonNull
  public final TextInputLayout postalCodeTextInputLayout;

  private CardInputWidgetBinding(@NonNull View rootView, @NonNull CardBrandView cardBrandView,
      @NonNull CardNumberEditText cardNumberEditText,
      @NonNull TextInputLayout cardNumberTextInputLayout, @NonNull FrameLayout container,
      @NonNull CvcEditText cvcEditText, @NonNull TextInputLayout cvcTextInputLayout,
      @NonNull ExpiryDateEditText expiryDateEditText,
      @NonNull TextInputLayout expiryDateTextInputLayout,
      @NonNull PostalCodeEditText postalCodeEditText,
      @NonNull TextInputLayout postalCodeTextInputLayout) {
    this.rootView = rootView;
    this.cardBrandView = cardBrandView;
    this.cardNumberEditText = cardNumberEditText;
    this.cardNumberTextInputLayout = cardNumberTextInputLayout;
    this.container = container;
    this.cvcEditText = cvcEditText;
    this.cvcTextInputLayout = cvcTextInputLayout;
    this.expiryDateEditText = expiryDateEditText;
    this.expiryDateTextInputLayout = expiryDateTextInputLayout;
    this.postalCodeEditText = postalCodeEditText;
    this.postalCodeTextInputLayout = postalCodeTextInputLayout;
  }

  @Override
  @NonNull
  public View getRoot() {
    return rootView;
  }

  @NonNull
  public static CardInputWidgetBinding inflate(@NonNull LayoutInflater inflater,
      @NonNull ViewGroup parent) {
    if (parent == null) {
      throw new NullPointerException("parent");
    }
    inflater.inflate(R.layout.card_input_widget, parent);
    return bind(parent);
  }

  @NonNull
  public static CardInputWidgetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.card_brand_view;
      CardBrandView cardBrandView = ViewBindings.findChildViewById(rootView, id);
      if (cardBrandView == null) {
        break missingId;
      }

      id = R.id.card_number_edit_text;
      CardNumberEditText cardNumberEditText = ViewBindings.findChildViewById(rootView, id);
      if (cardNumberEditText == null) {
        break missingId;
      }

      id = R.id.card_number_text_input_layout;
      TextInputLayout cardNumberTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (cardNumberTextInputLayout == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.cvc_edit_text;
      CvcEditText cvcEditText = ViewBindings.findChildViewById(rootView, id);
      if (cvcEditText == null) {
        break missingId;
      }

      id = R.id.cvc_text_input_layout;
      TextInputLayout cvcTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (cvcTextInputLayout == null) {
        break missingId;
      }

      id = R.id.expiry_date_edit_text;
      ExpiryDateEditText expiryDateEditText = ViewBindings.findChildViewById(rootView, id);
      if (expiryDateEditText == null) {
        break missingId;
      }

      id = R.id.expiry_date_text_input_layout;
      TextInputLayout expiryDateTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (expiryDateTextInputLayout == null) {
        break missingId;
      }

      id = R.id.postal_code_edit_text;
      PostalCodeEditText postalCodeEditText = ViewBindings.findChildViewById(rootView, id);
      if (postalCodeEditText == null) {
        break missingId;
      }

      id = R.id.postal_code_text_input_layout;
      TextInputLayout postalCodeTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (postalCodeTextInputLayout == null) {
        break missingId;
      }

      return new CardInputWidgetBinding(rootView, cardBrandView, cardNumberEditText,
          cardNumberTextInputLayout, container, cvcEditText, cvcTextInputLayout, expiryDateEditText,
          expiryDateTextInputLayout, postalCodeEditText, postalCodeTextInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
